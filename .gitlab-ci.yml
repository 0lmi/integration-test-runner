variables:
  DOCKER_REPOSITORY: mendersoftware/integration-test-runner

stages:
  - test
  - build
  - publish

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-static.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'

test:lint:kubeval:
  stage: test
  image: alpine
  before_script:
    - wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
    - tar xf kubeval-linux-amd64.tar.gz kubeval
    - mv kubeval /usr/local/bin/kubeval
  script:
    - kubeval kubernetes.yaml

deploy:production:
  stage: publish
  only:
    refs:
      - master
  image: debian:buster
  script:
    # Install kubectl
    - apt update && apt install -yyq curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    # Install AWS CLI and dependencies
    - apt install -yyq awscli
    - curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/aws-iam-authenticator
    - chmod +x ./aws-iam-authenticator
    - mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
    # TODO: enable the following steps once the SRE team has place where to deploy it
    # # Configure AWS CLI
    # - export AWS_ACCESS_KEY_ID=$CI_JOBS_AWS_ACCESS_KEY_ID
    # - export AWS_SECRET_ACCESS_KEY=$CI_JOBS_AWS_SECRET_ACCESS_KEY
    # - export AWS_DEFAULT_REGION=$CI_JOBS_AWS_REGION
    # - aws eks --region $CI_JOBS_AWS_REGION update-kubeconfig --name <SET-HERE-CLUSTER-NAME>
    # # Execute the job in the cluster
    # - kubectl -n <SET-HERE-NAMESPACE> apply -f kubernetes.yaml
